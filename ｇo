cflag(目标编译语言是c)
cxxflag(兼容c,c++)
cppflag(纯c)
ldflag(连接参数)
uinptr 8字节
type xxx int 
typr yyy=int 起别名
string 底层是个结构体大小为１６个字节
Typeof(种类) Kind（类型）
lens长度cap容量
go tool objdump -s "main\.main" aaa
程序实体，变量。常量。函数。结构体。接口

{}除了代表空代码块还可以代表任何内容的数据结构
请记住，在无需扩容时，append函数返回的是指向原底数组的新切片，而在需要扩容时，ａｐｐｅｎｄ函数返回的是指向新底层数组的新切片。
初始时两个切片引用同一个底层数组，在后续操作中对某个切片的操作超出底层数组的容量时，这两个切片引用的就不是同一个数组了
ｌｉｓｔ插入元素的方法只接受interface{}类型的值这个值就是ｅｌｅｍｅｎｔ
类型的指针类型，如果我们自己生成这类元素，链表不会接受
element有几个私有字段，分别是前一个元素，后一个元素，和所属链表的的指针值
还有一个公开字段value，该字段就是持有元素的实际值，它是interface{}类型的
list可以作为queue和
stack的基础数据结构
2.ring可以用来保存固定数量的元素，例如保存最近100条日志，用户最近10次操作
3.heap可以用来排序。游戏编程中是一种高效的定时器实现方案
一个hash表会持有一定数量的hash桶，每个桶均匀储存一定的键-元素对。hash表会先用这个键的hash值低几位去定位到一个hash桶，然后再去桶中找键，找到了键就找到了
对应的元素值。
new就是个指针
make指针，数组，两部
...数和切片转换
先返回再defer
传入函数的变量如果是值类型，那么函数修改它不会影响原来的变量
如果传入的是引用类型，那么函数修改他会影响原来的变量
2.当函数返回指针类型时不会发生拷贝。当函数返回非指针类型并把结果赋值给其它变量肯定会发生拷贝
１．我们可以在结构体中嵌入某个类型的指针类型，它和普通指针类型一样，默认初始化为ｎｉｌ,所以使用前需要初始化，否则可能错误
２．空结构体不占内存空间，但是具有结构体的一切属性，如果可以写入通道channel
.所以当我们需要使用结构体而又不需要具体属性时可以使用它。


名字相关结构组合指针转换
对象转接口指针
接口转对象.()表达式

公有反射赋值
指针能探测结构
指针.elem取值
返回值在堆里
返回值首地址取值
锁（由无锁实现是轻量级锁）
无锁
once全局一次

